services:
  backend_perekhodnichki:
    image: ghcr.io/m4tveevm/perekhodnichki-backend:latest
    environment:
      - DJANGO_DB_HOST=perekhodnichki_db
      - DJANGO_DB_NAME=postgres
      - DJANGO_DB_USER=postgres
      - DJANGO_ALLOWED_HOSTS=spbetu.ru,localhost
      - CSRF_TRUSTED_ORIGINS=https://spbetu.ru/api
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_password
      - DJANGO_SECRET_FILE=/run/secrets/django_secret
      - DJANGO_SUPERUSER_USERNAME_FILE=/run/secrets/django_superuser_username
      - DJANGO_SUPERUSER_EMAIL_FILE=/run/secrets/django_superuser_email
      - DJANGO_SUPERUSER_PASSWORD_FILE=/run/secrets/django_superuser_password
    entrypoint: >
      sh -c "
        export POSTGRES_PASSWORD=$$(cat /run/secrets/pg_password);
        exec gunicorn gamification.wsgi:application --bind 0.0.0.0:8000 --workers=3
      "
    networks:
      - traefik-public
      - perekhodnichki_net
    secrets:
      - pg_password
      - django_secret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend_perekhodnichki.rule=Host(`spbetu.ru`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend_perekhodnichki.entrypoints=websecure"
      - "traefik.http.routers.backend_perekhodnichki.tls=true"
      - "traefik.http.services.backend_perekhodnichki.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik-public"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        order: start-first

  frontend_perekhodnichki:
    image: ghcr.io/m4tveevm/perekhodnichki-frontend:latest
    environment:
      - REACT_APP_API_URL=https://spbetu.ru/api
    networks:
      - traefik-public
      - perekhodnichki_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend_perekhodnichki.rule=Host(`spbetu.ru`)"
      - "traefik.http.routers.frontend_perekhodnichki.entrypoints=websecure"
      - "traefik.http.routers.frontend_perekhodnichki.tls=true"
      - "traefik.http.services.frontend_perekhodnichki.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik-public"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  pg15_perekhodnichki:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_LISTEN_ADDRESSES=*
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_password
    secrets:
      - pg_password
    networks:
      perekhodnichki_net:
          aliases:
            - perekhodnichki_db
    deploy:
      restart_policy:
        condition: any
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=false"

networks:
  traefik-public:
    external: true
  perekhodnichki_net:
    driver: overlay
    attachable: true

volumes:
  postgres_data:

secrets:
  pg_password:
    external: true
  django_secret:
    external: true